{"version":3,"sources":["components/Header.js","components/JumboTron.js","components/LotteryQPForm.js","components/QuickPick.js","components/QuickPickList.js","components/MainApp.js","components/SendResults.js","App.js","index.js"],"names":["Header","props","Navbar","bg","variant","expand","Container","Brand","href","src","width","height","className","alt","title","Toggle","Collapse","id","Nav","NavDropdown","Item","disabled","Divider","Link","target","JumboTron","saveSupportedGames","useState","showModal","setShowModal","handleCloseModal","Row","Col","md","Image","rounded","fluid","Button","onClick","Modal","show","onHide","dialogClassName","backdrop","centered","closeButton","Title","Body","Figure","Caption","Footer","audio","Audio","LotteryQPForm","supportedGames","setSupportedGames","number","setNumber","game","setGame","errMsg","setErrMsg","useEffect","a","fetch","process","response","ok","Error","status","json","responseData","gs","gamesSupported","message","formLoadState","gameClickHandler","event","value","onError","Fragment","Form","onReset","onFormReset","setAllowMedia","onSubmit","preventDefault","tokenVerified","onFormSubmitter","Group","controlId","Label","Control","type","min","max","step","placeholder","required","onChange","map","e","Check","name","label","longname","shortname","description","padding","checked","ButtonGroup","allowMedia","play","QuickPick","pad","size","s","String","length","numbers","pball","listItemStyle","i","QuickPickList","content","header","onlyone","document","querySelector","scrollIntoView","qp","longName","MainApp","quickPicks","setQuickPicks","getLotteryInfo","reqData","method","body","JSON","stringify","headers","to","window","location","reload","SendResults","history","email","setEmail","formErrors","setFormErrors","emailResults","RegExp","test","toast","replace","App","setTokenVerified","loadReCaptcha","appState","appStateClass","verifyToken","token","success","undefined","path","exact","render","from","sitekey","action","verifyCallback","myApp","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.99a5535c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"https://bytecodeman.com/specialapps/\">\r\n          <img\r\n            src=\"./img/logo.svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"React Bootstrap App\"\r\n            title=\"A React Bootstrap App\"\r\n          />{\" \"}\r\n          Special Apps\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n          <Nav className=\"me-auto\">\r\n            <NavDropdown title=\"Other Apps\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#\" disabled className=\"text-center\">\r\n                Math Apps\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"https://bytecodeman.com/specialapps/factoring/\">\r\n                Number Factoring\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"https://bytecodeman.com/specialapps/gcflcm/\">\r\n                GCF/LCM Calculator\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"https://bytecodeman.com/specialapps/lcm/\">\r\n                Algebraic LCM Solver\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"https://bytecodeman.com/specialapps/baseconverter/\">\r\n                Number Base Converter\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#\" disabled className=\"text-center\">\r\n                Fun Apps\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item\r\n                href=\"https://lotteryquickpick.herokuapp.com/\"\r\n                className=\"active\"\r\n              >\r\n                Lottery Quick Picks\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"https://bytecodeman.com/specialapps/alphametics/\">\r\n                Alphametics Solver\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"https://bytecodeman.com/specialapps/wordscape/\">\r\n                Wordscape Assistant\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Nav.Link href=\"https://bytecodeman.com/\" target=\"_blank\">\r\n              bytecodeman.com\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Image,\r\n  Modal,\r\n  Figure,\r\n} from \"react-bootstrap\";\r\n\r\nfunction JumboTron() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleCloseModal = () => setShowModal(false);\r\n  const handleShowModal = () => setShowModal(true);\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"py-5\">\r\n        <Row>\r\n          <Col className=\"mb-4\">\r\n            <h1 className=\"display-5 fw-bold text-center text-md-start\">\r\n              Generate Quick Picks!\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"3\" className=\"text-center mb-4\">\r\n            <Image\r\n              src=\"img/logo512.png\"\r\n              rounded\r\n              fluid\r\n              alt=\"Generate Quick Picks Logo\"\r\n            ></Image>\r\n          </Col>\r\n          <Col md=\"9\">\r\n            <p>\r\n              This app generates quick picks for popular lotteries. If you see a\r\n              number combination that strikes you, you know what to do!\r\n            </p>\r\n            <p>You can now email the quickpicks!!!</p>\r\n            <p>For amusement only!!!</p>\r\n            <p>\r\n              <Button variant=\"primary\" onClick={handleShowModal}>\r\n                About\r\n              </Button>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {showModal ? (\r\n        <Modal\r\n          show={showModal}\r\n          onHide={handleCloseModal}\r\n          dialogClassName=\"modal-90w\"\r\n          backdrop=\"static\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Generate Quick Picks!</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <p>\r\n              This app generates quick picks for popular lotteries. If you see a\r\n              number combination that strikes you, you know what to do!\r\n            </p>\r\n            <p>For amusement only!!!</p>\r\n            <Figure>\r\n              <Figure.Image\r\n                width={139}\r\n                height={140}\r\n                alt=\"Tony Silvestri\"\r\n                src=\"img/TonySilvestri.jpg\"\r\n              />\r\n              <Figure.Caption>\r\n                Designed and Coded by:{\" \"}\r\n                <a href=\"mailto:tonysilvestri@bytecodeman.com\">\r\n                  Antonio C. Silvestri\r\n                </a>\r\n              </Figure.Caption>\r\n            </Figure>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleCloseModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JumboTron;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, ButtonGroup, Button } from \"react-bootstrap\";\r\nimport \"./LotteryQPForm.css\";\r\n\r\nconst audio = new Audio(\"media/success.mp3\");\r\nlet saveSupportedGames;\r\n\r\nconst LotteryQPForm = (props) => {\r\n  const [supportedGames, setSupportedGames] = useState();\r\n  const [number, setNumber] = useState(1);\r\n  const [game, setGame] = useState(\"\");\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (saveSupportedGames) {\r\n        setSupportedGames(saveSupportedGames);\r\n      } else {\r\n        try {\r\n          const response = await fetch(\r\n            `${process.env.REACT_APP_BASEURL}/supportedgames`\r\n          );\r\n          if (!response.ok) {\r\n            throw new Error(response.status);\r\n          }\r\n          const responseData = await response.json();\r\n          setSupportedGames(responseData.gs.gamesSupported);\r\n          saveSupportedGames = responseData.gs.gamesSupported;\r\n        } catch (error) {\r\n          setErrMsg(error.message || \"Something went wrong!\");\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const numberChangeHandler = (event) => {\r\n    setNumber(event.target.value);\r\n  };\r\n\r\n  const gameClickHandler = (event) => {\r\n    setGame(event.target.value);\r\n  };\r\n\r\n  const effectsClickHandler = (event) => {\r\n    props.setAllowMedia(event.target.checked);\r\n  };\r\n\r\n  const submitClicker = (event) => {\r\n    if (props.allowMedia) {\r\n      audio.play();\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const submitQPHandler = (event) => {\r\n    event.preventDefault();\r\n    if (props.tokenVerified === true) {\r\n      props.onFormSubmitter(game, number);\r\n    }\r\n  };\r\n\r\n  const resetForm = (event) => {\r\n    setNumber(1);\r\n    setGame(\"\");\r\n    props.onFormReset();\r\n    props.setAllowMedia(false);\r\n  };\r\n\r\n  let formLoadState;\r\n\r\n  if (!errMsg && !supportedGames) {\r\n    formLoadState = <h2>Loading Form . . .</h2>;\r\n  } else if (errMsg) {\r\n    props.onError(\"Error Retrieving Supported Games\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section id=\"quickpickform\">\r\n        <Row>\r\n          <Col>\r\n            {formLoadState}\r\n            <Form onReset={resetForm} onSubmit={submitQPHandler}>\r\n              <Form.Group controlId=\"NoOfQuickPicks\" className=\"mb-4\">\r\n                <Form.Label>No of QuickPicks</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  max=\"25\"\r\n                  step=\"1\"\r\n                  placeholder=\"Enter a number between 1 and 25\"\r\n                  value={number}\r\n                  required\r\n                  onChange={numberChangeHandler}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-4\">\r\n                {supportedGames &&\r\n                  supportedGames.map((e) => (\r\n                    <div key={e.shortname + \"div\"} className=\"mb-2\">\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        name=\"LotteryGame\"\r\n                        label={[\r\n                          <strong key={e.shortname + \"strong\"}>\r\n                            {e.longname}\r\n                          </strong>,\r\n                          \": \",\r\n                          e.description,\r\n                        ]}\r\n                        value={e.shortname}\r\n                        id={e.shortname}\r\n                        key={e.shortname + \"check\"}\r\n                        data-padding={e.padding}\r\n                        required /* checked={game === e.shortname} */\r\n                        onClick={gameClickHandler}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-4\">\r\n                <Form.Check\r\n                  type=\"switch\"\r\n                  id=\"allowEffects\"\r\n                  label=\"Allow Media Effects?\"\r\n                  onClick={effectsClickHandler}\r\n                />\r\n              </Form.Group>\r\n              <ButtonGroup>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  onClick={submitClicker}\r\n                  disabled={!game}\r\n                >\r\n                  Generate Quick Picks\r\n                </Button>\r\n                <Button type=\"reset\" variant=\"secondary\">\r\n                  Reset\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LotteryQPForm;\r\n","import React from \"react\";\n\nimport \"./QuickPick.css\";\n\nconst QuickPick = props => {\n  const pad = (number, size) => {\n    let s = String(number);\n    while (s.length < (size || 2)) {\n      s = \"0\" + s;\n    }\n    return s;\n  };\n\n  const { padding, numbers, pball } = props;\n  let listItemStyle = \"quick-pick\";\n  if (props.allowMedia) {\n    listItemStyle += \" fancy\";\n  }\n\n  return (\n    <li className={listItemStyle}>\n      {numbers.map((e, i) => (\n        <span key={i}>{padding ? pad(e, 2) : e}</span>\n      ))}\n      {pball ? (\n        <span className='pball'>{padding ? pad(pball, 2) : pball}</span>\n      ) : null}\n    </li>\n  );\n};\n\nexport default QuickPick;\n","import React, { useEffect } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport QuickPick from \"./QuickPick\";\nimport \"./QuickPickList.css\";\n\nconst QuickPickList = (props) => {\n  let content = null;\n  let header = null;\n  let onlyone = \"\";\n\n  useEffect(() => {\n    (() => {\n      const element = document.querySelector(\"#results\");\n      element.scrollIntoView();\n    })();\n  }, [props.qp]);\n\n  if (!props.qp) {\n    content = <p>No QuickPicks Generated</p>;\n  } else {\n    const { qp, longName, padding } = props.qp;\n    const allowMedia = props.allowMedia;\n\n    if (qp.length === 0) {\n      content = <p>No Quick Picks Generated</p>;\n    } else if (qp.length === 1) {\n      header = <h2>Your {longName} Quick Pick:</h2>;\n      onlyone = \"onlyone\";\n    } else {\n      header = <h2>Your {longName} Quick Picks:</h2>;\n    }\n    content = (\n      <ol className={`quickpick-list ${onlyone}`}>\n        {qp.map((e, i) => (\n          <QuickPick\n            key={i}\n            allowMedia={allowMedia}\n            numbers={e.numbers}\n            pball={e.pball}\n            padding={padding}\n          />\n        ))}\n      </ol>\n    );\n  }\n\n  return (\n    <section id=\"results\">\n      <Row>\n        <Col>\n          {header}\n          {content}\n        </Col>\n      </Row>\n    </section>\n  );\n};\n\nexport default QuickPickList;\n","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport LotteryQPForm from \"./LotteryQPForm\";\nimport QuickPickList from \"./QuickPickList\";\n\nimport \"./MainApp.css\";\n\nfunction MainApp({ tokenVerified, setErrMsg, quickPicks, setQuickPicks }) {\n  const [allowMedia, setAllowMedia] = useState(false);\n\n  const getLotteryInfo = async (game, number) => {\n    try {\n      const reqData = {\n        game,\n        number,\n      };\n      const response = await fetch(\n        `${process.env.REACT_APP_BASEURL}/getquickpicks`,\n        {\n          method: \"POST\",\n          body: JSON.stringify(reqData),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n\n      const responseData = await response.json();\n\n      setErrMsg(\"\");\n      setQuickPicks(responseData.qp);\n    } catch (error) {\n      setErrMsg(error.message || \"Something went wrong!\");\n      setQuickPicks(null);\n    }\n  };\n\n  const clearApp = () => {\n    setQuickPicks(null);\n    setErrMsg(\"\");\n  };\n  const reloadPage = () => window.location.reload(true);\n\n  return (\n    <React.Fragment>\n      {quickPicks && (\n        <>\n          <QuickPickList allowMedia={allowMedia} qp={quickPicks} />\n          <Link to=\"/send\" className=\"btn btn-primary mb-5\">\n            Email Results\n          </Link>\n        </>\n      )}\n      <LotteryQPForm\n        tokenVerified={tokenVerified}\n        onFormSubmitter={getLotteryInfo}\n        onFormReset={clearApp}\n        onError={setErrMsg}\n        allowMedia={allowMedia}\n        setAllowMedia={setAllowMedia}\n      />\n      {tokenVerified === false ? (\n        <Button variant=\"info\" className=\"mt-5\" onClick={reloadPage}>\n          Reload Page\n        </Button>\n      ) : null}\n    </React.Fragment>\n  );\n}\n\nexport default MainApp;\n","import React, { useState } from \"react\";\r\nimport { Button, ButtonGroup, Form } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport QuickPickList from \"./QuickPickList\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./SendResults.css\";\r\n\r\nfunction SendResults({ quickPicks, setQuickPicks, setErrMsg, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [formErrors, setFormErrors] = useState(null);\r\n\r\n  const cancel = () => {\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const emailResults = async () => {\r\n    var pattern = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n\r\n    if (!pattern.test(email)) {\r\n      setFormErrors(\"Please enter valid email address.\");\r\n    } else {\r\n      try {\r\n        setFormErrors(null);\r\n        const response = await fetch(`${process.env.REACT_APP_BASEURL}/send`, {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ email, quickPicks }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        }\r\n\r\n        await response.json();\r\n\r\n        setErrMsg(\"\");\r\n        setQuickPicks(null);\r\n        toast(\"Email sent\");\r\n      } catch (error) {\r\n        setErrMsg(error.message || \"Something went wrong!\");\r\n      }\r\n      history.replace(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <QuickPickList allowMedia={false} qp={quickPicks} />\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"email\" className=\"mb-4\">\r\n          <Form.Label>Enter Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {formErrors && <div className=\"text-danger\">{formErrors}</div>}\r\n        </Form.Group>\r\n        <ButtonGroup className=\"float-lg-end\">\r\n          <Button variant=\"primary\" onClick={emailResults}>\r\n            Send Results\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={cancel}>\r\n            Cancel\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SendResults;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ReCaptcha, loadReCaptcha } from \"react-recaptcha-v3\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Header from \"./components/Header\";\nimport JumboTron from \"./components/JumboTron\";\nimport MainApp from \"./components/MainApp\";\nimport SendResults from \"./components/SendResults\";\n\nfunction App() {\n  const [quickPicks, setQuickPicks] = useState(null);\n  const [tokenVerified, setTokenVerified] = useState();\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  useEffect(() => {\n    loadReCaptcha(`${process.env.REACT_APP_RECAPTCHA_SITE_KEY}`);\n  }, []);\n\n  const verifyToken = async (token) => {\n    try {\n      const reqData = {\n        token,\n      };\n      const response = await fetch(\n        `${process.env.REACT_APP_BASEURL}/verifytoken`,\n        {\n          method: \"POST\",\n          body: JSON.stringify(reqData),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      const responseData = await response.json();\n      setTokenVerified(responseData.success);\n    } catch (error) {\n      setErrMsg(error.message || \"Something went wrong!\");\n      setTokenVerified(false);\n    }\n  };\n\n  let appState;\n  let appStateClass;\n\n  if (tokenVerified === undefined) {\n    appState = <span>Validating Recaptcha . . .</span>;\n  } else if (tokenVerified === false) {\n    appState = <span>Captcha Not Validated. Try Reloading the Page.</span>;\n    appStateClass = \"error\";\n  }\n  if (errMsg) {\n    appState = (\n      <React.Fragment>\n        {appState} <br /> {errMsg}\n      </React.Fragment>\n    );\n    appStateClass = \"error\";\n  }\n\n  return (\n    <React.Fragment>\n      <header>\n        <Header />\n        <JumboTron />\n      </header>\n      <main>\n        <Container>\n          <Row>\n            <Col>\n              {appState ? <h2 className={appStateClass}>{appState}</h2> : null}\n              <Switch>\n                <Route\n                  path=\"/\"\n                  exact\n                  render={(props) => (\n                    <MainApp\n                      quickPicks={quickPicks}\n                      setQuickPicks={setQuickPicks}\n                      setErrMsg={setErrMsg}\n                      tokenVerified={tokenVerified}\n                      {...props}\n                    />\n                  )}\n                />\n                {quickPicks && (\n                  <Route\n                    path=\"/send\"\n                    render={(props) => (\n                      <SendResults\n                        quickPicks={quickPicks}\n                        setQuickPicks={setQuickPicks}\n                        setErrMsg={setErrMsg}\n                        {...props}\n                      />\n                    )}\n                  />\n                )}\n                <Redirect from=\"/*\" to=\"/\" />\n              </Switch>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n      <ToastContainer />\n      <ReCaptcha\n        sitekey={`${process.env.REACT_APP_RECAPTCHA_SITE_KEY}`}\n        action=\"getquickpicks\"\n        verifyCallback={verifyToken}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\n\nconst myApp = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\nReactDOM.render(myApp, document.getElementById(\"root\"));\n"],"sourceRoot":""}